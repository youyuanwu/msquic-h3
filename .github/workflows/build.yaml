name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        BUILD_TYPE: ["Debug"]
        os: [ windows-latest, ubuntu-latest ]
    steps:
    - uses: actions/checkout@v4

    - name: Get latest version of CMake
      uses: lukka/get-cmake@latest

    - name: Install rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.88.0
        components: rustfmt, clippy

    - name: Install msquic from apt (linux)
      if: runner.os == 'Linux'
      run: |
        wget -q https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb;
        sudo dpkg -i packages-microsoft-prod.deb;
        sudo apt-get update;
        sudo apt-get install libmsquic;
        dpkg -L libmsquic;

    - name: Run Vcpkg (windows)
      if: runner.os == 'Windows'
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 7354f1c8a0a276072e8d73d7eb6df6ca0ce8ccb1

    - name: vcpkg install msquic (windows)
      if: runner.os == 'Windows'
      run: vcpkg install msquic

    # generate cert.
    - name: run cmake
      run: > 
        cmake . -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} -B build

    - name: run build
      run: cmake --build build --config ${{ matrix.BUILD_TYPE }}
    
    - name: Run cargo check
      run: cargo check --all-targets --all-features

    - name: Run cargo fmt
      run: cargo fmt --all -- --check
    
    - name: Run cargo clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run cargo test
      run: cargo test --all -- --nocapture
